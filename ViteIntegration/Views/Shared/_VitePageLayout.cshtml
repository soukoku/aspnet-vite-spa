@using Microsoft.AspNetCore.Hosting
@using Microsoft.Extensions.Hosting
@using Soukoku.AspNetCore.ViteIntegration
@inject ViteBuildManifest manifest
@inject IWebHostEnvironment env
@model IVitePageModel
@{
var resolved = manifest.ResolveEntryChunk(Model.Entry);
var lang = ViewData["lang"] ?? "en";
}
<!DOCTYPE html>
<html lang="@lang">
	<head>
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<title>@ViewData["Title"]</title>
		@if (manifest.Entries.Count == 0 && env.IsDevelopment())
		{
		<script type="module" src="@Url.Content("~/@vite/client")"></script>
		<script type="module" src="@Url.Content($"~/{Model.Entry}")"></script>
		}
		else if (!string.IsNullOrEmpty(resolved.MainModule))
		{
		<script type="module" src="@Url.Content(resolved.MainModule)"></script>
		foreach (var subMod in resolved.PreloadModules)
		{
		<link rel="modulepreload" href="@Url.Content(subMod)">
		}
		foreach (var css in resolved.CssFiles)
		{
		<link rel="stylesheet" href="@Url.Content(css)">
		}
		}
		@await RenderSectionAsync("Head", required: false)
	</head>
	<body>
		@RenderBody()
		@await RenderSectionAsync("Scripts", required: false)
	</body>
</html>
